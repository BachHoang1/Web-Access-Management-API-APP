<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
    integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
  <style>
    /* div{
      background:#blue
    } */
  </style>
  <title>SUPERUSER</title>
</head>

<body>


  <% if (typeof message !== 'undefined' ) { %>
  <p><%= message %></p>
  <% } %>

  <!-- Optional JavaScript; choose one of the two! -->
  <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
    crossorigin="anonymous"></script>

  <nav class="navbar navbar-light" style="background-color: #e3f2fd;">
    <a class="nav-link" href="#">
      <h1>SUPERUSER AREA</h1><span class="sr-only"></span>
    </a>
    <span class="navbar-text">
      <a href="/logout">
        <h1><span class="badge badge-warning">LOGOUT</span></h1>
      </a>
    </span>
  </nav>

  <div class="row mb-3">
    <div class="col-2"></div>
    <div class="col-6">
      <h1> <span class="badge">Add new user</span></h1>
      <table class="table table-striped">
        <thead class="thead-dark ">
          <tr>
            <th scope="col">username</th>
            <th scope="col">password</th>
            <th scope="col">role</th>
            <th scope="col">specific path</th>
            <th scope="col">Add</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <input id="add_username" value="">
            </td>
            <td>
              <input id="add_password" value="">
            </td>
            <td>
              <select id="add_role">
                <option value="admin">admin</option>
                <option value="finance">finance</option>
                <option value="tech">tech</option>
                <option value="hr">hr</option>
                <option value="sales">sales</option>
              </select>
            </td>
            <td>
              <input id="add_path" value="" />
            </td>

            <td><button class="btn btn-warning" type="button" onclick="addUser()">
                Add</button></td>
          </tr>
        </tbody>
      </table>
      <br />
      <h1> <span class="badge">List of user</span></h1>
      <table id="example1" class="table table-striped">
        <thead class="thead-dark ">
          <tr>
            <th scope="col">id</th>
            <th scope="col">username</th>
            <th scope="col">password</th>
            <th scope="col">role</th>
            <th scope="col">specific link</th>
            <th scope="col">edit</th>
            <th scope="col">delete</th>
          </tr>
        </thead>
        <tbody id="userList"></tbody>
      </table>

    </div>
  </div>

  <script>
    const tbody = document.querySelector('#userList');

    const addUser = async () => {
      try {
        const add_un = document.querySelector('#add_username').value;
        const add_pw = document.querySelector('#add_password').value;
        const add_ro = document.querySelector('#add_role').value;
        const add_pa = document.querySelector('#add_path').value;
        
        const response = await fetch(`http://localhost:3000/users/add`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userName: add_un, password: add_pw, role: add_ro, path:add_pa })
        })


        location.reload()
      } catch (err) {
        console.log(err.message);
      }
    }
    const editUser = async (id) => {
      try {
        const body = {
          id,
          username: document.querySelector("#us_" + id).value,
          password: document.querySelector("#pw_" + id).value,
          role: document.querySelector("#ro_" + id).value,
          path:document.querySelector('#pa_'+id).value
        }
        console.log(body)
        const response = await fetch(`http://localhost:3000/update_user`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(body)
        })
      } catch (err) {
        console.log(err.message);
      }
    }

    const deleteUser = async (id) => {
      try {
        const response = await fetch(`http://localhost:3000/delete_user/${id}`, {
          method: "DELETE",
        })
        location.reload()
      } catch (err) {
        console.log(err.message);
      }
    }

    const loadUser = async () => {
      // use try... catch... to catch error
      try {
        console.log("getting user data")
        //for list flight from
        const response = await fetch(`http://localhost:3000/get_user_data`, {
          method: "GET",
        })
        return await response.json()
      } catch (err) {
        console.log(err.message);
      }
    }

    loadUser().then(data => {
      table = "";
      data.map((stuff, index) => {
        table += `<tr>`
        table += ` 
            <td>${stuff._id}</td>
            <td>
              <input id="us_${stuff._id}" value="${stuff.username}" />
            </td>
            <td>
              <input id="pw_${stuff._id}" value="${stuff.password}" />
            </td>
            <td>
              <select id="ro_${stuff._id}">
                <option value="admin" ${stuff.role === "admin" ? "selected" : ""}>admin</option>
                <option value="finance" ${stuff.role === "finance" ? "selected" : ""}>finance</option>
                <option value="tech" ${stuff.role === "tech" ? "selected" : ""}>tech</option>
                <option value="hr" ${stuff.role === "hr" ? "selected" : ""}>hr</option>
                <option value="sales" ${stuff.role === "sales" ? "selected" : ""}>sales</option>
              </select>
            </td>
            <td>
              <input id="pa_${stuff._id}" value="${stuff.path}" />
            </td>
            <td><button class="btn btn-warning" type="button" 
              onclick="editUser('${stuff._id}','${stuff.username}','${stuff.password}','${stuff.role}')">
                Edit</button></td>
            <td><button class="btn btn-warning" type="button" 
              onclick="deleteUser('${stuff._id}')">
                Delete</button></td>
                `;
        table += `</tr>`
        tbody.innerHTML = table
      })

    }).catch(error => {
      // When fetch ends with a bad HTTP status, e.g. 404
      console.log(error.message);
    })
  </script>
</body>

</html>